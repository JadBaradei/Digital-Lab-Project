|TOP_Module
clk_50Mhz => clk_50Mhz.IN5
reset => reset.IN1
ir_input => ir_input.IN1
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
SW[3] => SW[3].IN1
SW[4] => SW[4].IN1
SW[5] => SW[5].IN1
SW[6] => SW[6].IN1
SW[7] => SW[7].IN1
SW[8] => SW[8].IN1
LEDR <= STATE_Manager:comb_3.LEDR
lcd_data[0] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[1] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[2] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[3] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[4] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[5] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[6] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[7] <= LCD_module:ready_to_play.LCD_DATA
lcd_rw <= LCD_module:ready_to_play.LCD_RW
lcd_en <= LCD_module:ready_to_play.LCD_EN
lcd_rs <= LCD_module:ready_to_play.LCD_RS
HEX0[0] <= power_selection:select_your_power.oHEX_D1
HEX0[1] <= power_selection:select_your_power.oHEX_D1
HEX0[2] <= power_selection:select_your_power.oHEX_D1
HEX0[3] <= power_selection:select_your_power.oHEX_D1
HEX0[4] <= power_selection:select_your_power.oHEX_D1
HEX0[5] <= power_selection:select_your_power.oHEX_D1
HEX0[6] <= power_selection:select_your_power.oHEX_D1
HEX1[0] <= power_selection:select_your_power.oHEX_D2
HEX1[1] <= power_selection:select_your_power.oHEX_D2
HEX1[2] <= power_selection:select_your_power.oHEX_D2
HEX1[3] <= power_selection:select_your_power.oHEX_D2
HEX1[4] <= power_selection:select_your_power.oHEX_D2
HEX1[5] <= power_selection:select_your_power.oHEX_D2
HEX1[6] <= power_selection:select_your_power.oHEX_D2
HEX2[0] <= DISPLAY_SEG:display_countdown.segments
HEX2[1] <= DISPLAY_SEG:display_countdown.segments
HEX2[2] <= DISPLAY_SEG:display_countdown.segments
HEX2[3] <= DISPLAY_SEG:display_countdown.segments
HEX2[4] <= DISPLAY_SEG:display_countdown.segments
HEX2[5] <= DISPLAY_SEG:display_countdown.segments
HEX2[6] <= DISPLAY_SEG:display_countdown.segments


|TOP_Module|clock_devider:clk_div
clk_in => clk_out_slow~reg0.CLK
clk_in => counter1[0].CLK
clk_in => counter1[1].CLK
clk_in => counter1[2].CLK
clk_in => counter1[3].CLK
clk_in => counter1[4].CLK
clk_in => counter1[5].CLK
clk_in => counter1[6].CLK
clk_in => counter1[7].CLK
clk_in => counter1[8].CLK
clk_in => counter1[9].CLK
clk_in => counter1[10].CLK
clk_in => counter1[11].CLK
clk_in => counter1[12].CLK
clk_in => counter1[13].CLK
clk_in => counter1[14].CLK
clk_in => counter1[15].CLK
clk_in => counter1[16].CLK
clk_in => counter1[17].CLK
clk_in => counter1[18].CLK
clk_in => counter1[19].CLK
clk_in => counter1[20].CLK
clk_in => counter1[21].CLK
clk_in => counter1[22].CLK
clk_in => counter1[23].CLK
clk_in => counter1[24].CLK
clk_in => counter1[25].CLK
clk_in => counter1[26].CLK
clk_in => counter1[27].CLK
clk_in => counter1[28].CLK
clk_in => counter1[29].CLK
clk_in => clk_out~reg0.CLK
clk_in => counter[0].CLK
clk_in => counter[1].CLK
clk_in => counter[2].CLK
clk_in => counter[3].CLK
clk_in => counter[4].CLK
clk_in => counter[5].CLK
clk_in => counter[6].CLK
clk_in => counter[7].CLK
clk_in => counter[8].CLK
clk_in => counter[9].CLK
clk_in => counter[10].CLK
clk_in => counter[11].CLK
clk_in => counter[12].CLK
clk_in => counter[13].CLK
clk_in => counter[14].CLK
clk_in => counter[15].CLK
clk_in => counter[16].CLK
clk_in => counter[17].CLK
clk_in => counter[18].CLK
clk_in => counter[19].CLK
clk_in => counter[20].CLK
clk_in => counter[21].CLK
clk_in => counter[22].CLK
clk_in => counter[23].CLK
clk_in => counter[24].CLK
clk_in => counter[25].CLK
clk_in => counter[26].CLK
clk_in => counter[27].CLK
clk_in => counter[28].CLK
clk_in => counter[29].CLK
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk_out_slow <= clk_out_slow~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|STATE_Manager:comb_3
clk => clk.IN2
clk_slow => ~NO_FANOUT~
reset => reset.IN1
ir_input => ir_input.IN1
LEDR <= LEDR~reg0.DB_MAX_OUTPUT_PORT_TYPE
SW[0] => state.OUTPUTSELECT
SW[0] => state.OUTPUTSELECT
SW[0] => state.OUTPUTSELECT
SW[0] => state.OUTPUTSELECT
SW[1] => state.OUTPUTSELECT
SW[1] => state.OUTPUTSELECT
SW[1] => state.OUTPUTSELECT
SW[1] => state.OUTPUTSELECT
SW[2] => state.OUTPUTSELECT
SW[2] => state.OUTPUTSELECT
SW[2] => state.OUTPUTSELECT
SW[2] => state.OUTPUTSELECT
SW[3] => always0.IN0
SW[3] => always0.IN0
SW[3] => always0.IN0
SW[4] => always0.IN1
SW[4] => always0.IN1
SW[4] => always0.IN1
SW[5] => state.OUTPUTSELECT
SW[5] => state.OUTPUTSELECT
SW[5] => state.OUTPUTSELECT
SW[5] => state.OUTPUTSELECT
SW[5] => chosen_code.OUTPUTSELECT
SW[5] => chosen_code.OUTPUTSELECT
SW[5] => chosen_code.OUTPUTSELECT
SW[5] => chosen_code.OUTPUTSELECT
SW[5] => chosen_code.OUTPUTSELECT
SW[5] => chosen_code.OUTPUTSELECT
SW[5] => chosen_code.OUTPUTSELECT
SW[5] => chosen_code.OUTPUTSELECT
SW[6] => ~NO_FANOUT~
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
state[0] <= state[0].DB_MAX_OUTPUT_PORT_TYPE
state[1] <= state[1].DB_MAX_OUTPUT_PORT_TYPE
state[2] <= state[2].DB_MAX_OUTPUT_PORT_TYPE
state[3] <= state[3].DB_MAX_OUTPUT_PORT_TYPE
current_digit[0] <= COUNTDOWN_SEG:counting_down.current_digit
current_digit[1] <= COUNTDOWN_SEG:counting_down.current_digit
current_digit[2] <= COUNTDOWN_SEG:counting_down.current_digit
current_digit[3] <= COUNTDOWN_SEG:counting_down.current_digit


|TOP_Module|STATE_Manager:comb_3|IR_RECEIVER:read_ir
iCLK => oDATA[0]~reg0.CLK
iCLK => oDATA[1]~reg0.CLK
iCLK => oDATA[2]~reg0.CLK
iCLK => oDATA[3]~reg0.CLK
iCLK => oDATA[4]~reg0.CLK
iCLK => oDATA[5]~reg0.CLK
iCLK => oDATA[6]~reg0.CLK
iCLK => oDATA[7]~reg0.CLK
iCLK => oDATA[8]~reg0.CLK
iCLK => oDATA[9]~reg0.CLK
iCLK => oDATA[10]~reg0.CLK
iCLK => oDATA[11]~reg0.CLK
iCLK => oDATA[12]~reg0.CLK
iCLK => oDATA[13]~reg0.CLK
iCLK => oDATA[14]~reg0.CLK
iCLK => oDATA[15]~reg0.CLK
iCLK => oDATA[16]~reg0.CLK
iCLK => oDATA[17]~reg0.CLK
iCLK => oDATA[18]~reg0.CLK
iCLK => oDATA[19]~reg0.CLK
iCLK => oDATA[20]~reg0.CLK
iCLK => oDATA[21]~reg0.CLK
iCLK => oDATA[22]~reg0.CLK
iCLK => oDATA[23]~reg0.CLK
iCLK => oDATA[24]~reg0.CLK
iCLK => oDATA[25]~reg0.CLK
iCLK => oDATA[26]~reg0.CLK
iCLK => oDATA[27]~reg0.CLK
iCLK => oDATA[28]~reg0.CLK
iCLK => oDATA[29]~reg0.CLK
iCLK => oDATA[30]~reg0.CLK
iCLK => oDATA[31]~reg0.CLK
iCLK => data_buf[0].CLK
iCLK => data_buf[1].CLK
iCLK => data_buf[2].CLK
iCLK => data_buf[3].CLK
iCLK => data_buf[4].CLK
iCLK => data_buf[5].CLK
iCLK => data_buf[6].CLK
iCLK => data_buf[7].CLK
iCLK => data_buf[8].CLK
iCLK => data_buf[9].CLK
iCLK => data_buf[10].CLK
iCLK => data_buf[11].CLK
iCLK => data_buf[12].CLK
iCLK => data_buf[13].CLK
iCLK => data_buf[14].CLK
iCLK => data_buf[15].CLK
iCLK => data_buf[16].CLK
iCLK => data_buf[17].CLK
iCLK => data_buf[18].CLK
iCLK => data_buf[19].CLK
iCLK => data_buf[20].CLK
iCLK => data_buf[21].CLK
iCLK => data_buf[22].CLK
iCLK => data_buf[23].CLK
iCLK => data_buf[24].CLK
iCLK => data_buf[25].CLK
iCLK => data_buf[26].CLK
iCLK => data_buf[27].CLK
iCLK => data_buf[28].CLK
iCLK => data_buf[29].CLK
iCLK => data_buf[30].CLK
iCLK => data_buf[31].CLK
iCLK => data_ready.CLK
iCLK => data[0].CLK
iCLK => data[1].CLK
iCLK => data[2].CLK
iCLK => data[3].CLK
iCLK => data[4].CLK
iCLK => data[5].CLK
iCLK => data[6].CLK
iCLK => data[7].CLK
iCLK => data[8].CLK
iCLK => data[9].CLK
iCLK => data[10].CLK
iCLK => data[11].CLK
iCLK => data[12].CLK
iCLK => data[13].CLK
iCLK => data[14].CLK
iCLK => data[15].CLK
iCLK => data[16].CLK
iCLK => data[17].CLK
iCLK => data[18].CLK
iCLK => data[19].CLK
iCLK => data[20].CLK
iCLK => data[21].CLK
iCLK => data[22].CLK
iCLK => data[23].CLK
iCLK => data[24].CLK
iCLK => data[25].CLK
iCLK => data[26].CLK
iCLK => data[27].CLK
iCLK => data[28].CLK
iCLK => data[29].CLK
iCLK => data[30].CLK
iCLK => data[31].CLK
iCLK => bitcount[0].CLK
iCLK => bitcount[1].CLK
iCLK => bitcount[2].CLK
iCLK => bitcount[3].CLK
iCLK => bitcount[4].CLK
iCLK => bitcount[5].CLK
iCLK => data_count_flag.CLK
iCLK => data_count[0].CLK
iCLK => data_count[1].CLK
iCLK => data_count[2].CLK
iCLK => data_count[3].CLK
iCLK => data_count[4].CLK
iCLK => data_count[5].CLK
iCLK => data_count[6].CLK
iCLK => data_count[7].CLK
iCLK => data_count[8].CLK
iCLK => data_count[9].CLK
iCLK => data_count[10].CLK
iCLK => data_count[11].CLK
iCLK => data_count[12].CLK
iCLK => data_count[13].CLK
iCLK => data_count[14].CLK
iCLK => data_count[15].CLK
iCLK => data_count[16].CLK
iCLK => data_count[17].CLK
iCLK => state_count_flag.CLK
iCLK => state_count[0].CLK
iCLK => state_count[1].CLK
iCLK => state_count[2].CLK
iCLK => state_count[3].CLK
iCLK => state_count[4].CLK
iCLK => state_count[5].CLK
iCLK => state_count[6].CLK
iCLK => state_count[7].CLK
iCLK => state_count[8].CLK
iCLK => state_count[9].CLK
iCLK => state_count[10].CLK
iCLK => state_count[11].CLK
iCLK => state_count[12].CLK
iCLK => state_count[13].CLK
iCLK => state_count[14].CLK
iCLK => state_count[15].CLK
iCLK => state_count[16].CLK
iCLK => state_count[17].CLK
iCLK => idle_count_flag.CLK
iCLK => idle_count[0].CLK
iCLK => idle_count[1].CLK
iCLK => idle_count[2].CLK
iCLK => idle_count[3].CLK
iCLK => idle_count[4].CLK
iCLK => idle_count[5].CLK
iCLK => idle_count[6].CLK
iCLK => idle_count[7].CLK
iCLK => idle_count[8].CLK
iCLK => idle_count[9].CLK
iCLK => idle_count[10].CLK
iCLK => idle_count[11].CLK
iCLK => idle_count[12].CLK
iCLK => idle_count[13].CLK
iCLK => idle_count[14].CLK
iCLK => idle_count[15].CLK
iCLK => idle_count[16].CLK
iCLK => idle_count[17].CLK
iCLK => state~1.DATAIN
iRST_n => data_ready.ACLR
iRST_n => oDATA[0]~reg0.ACLR
iRST_n => oDATA[1]~reg0.ACLR
iRST_n => oDATA[2]~reg0.ACLR
iRST_n => oDATA[3]~reg0.ACLR
iRST_n => oDATA[4]~reg0.ACLR
iRST_n => oDATA[5]~reg0.ACLR
iRST_n => oDATA[6]~reg0.ACLR
iRST_n => oDATA[7]~reg0.ACLR
iRST_n => oDATA[8]~reg0.ACLR
iRST_n => oDATA[9]~reg0.ACLR
iRST_n => oDATA[10]~reg0.ACLR
iRST_n => oDATA[11]~reg0.ACLR
iRST_n => oDATA[12]~reg0.ACLR
iRST_n => oDATA[13]~reg0.ACLR
iRST_n => oDATA[14]~reg0.ACLR
iRST_n => oDATA[15]~reg0.ACLR
iRST_n => oDATA[16]~reg0.ACLR
iRST_n => oDATA[17]~reg0.ACLR
iRST_n => oDATA[18]~reg0.ACLR
iRST_n => oDATA[19]~reg0.ACLR
iRST_n => oDATA[20]~reg0.ACLR
iRST_n => oDATA[21]~reg0.ACLR
iRST_n => oDATA[22]~reg0.ACLR
iRST_n => oDATA[23]~reg0.ACLR
iRST_n => oDATA[24]~reg0.ACLR
iRST_n => oDATA[25]~reg0.ACLR
iRST_n => oDATA[26]~reg0.ACLR
iRST_n => oDATA[27]~reg0.ACLR
iRST_n => oDATA[28]~reg0.ACLR
iRST_n => oDATA[29]~reg0.ACLR
iRST_n => oDATA[30]~reg0.ACLR
iRST_n => oDATA[31]~reg0.ACLR
iRST_n => idle_count[0].ACLR
iRST_n => idle_count[1].ACLR
iRST_n => idle_count[2].ACLR
iRST_n => idle_count[3].ACLR
iRST_n => idle_count[4].ACLR
iRST_n => idle_count[5].ACLR
iRST_n => idle_count[6].ACLR
iRST_n => idle_count[7].ACLR
iRST_n => idle_count[8].ACLR
iRST_n => idle_count[9].ACLR
iRST_n => idle_count[10].ACLR
iRST_n => idle_count[11].ACLR
iRST_n => idle_count[12].ACLR
iRST_n => idle_count[13].ACLR
iRST_n => idle_count[14].ACLR
iRST_n => idle_count[15].ACLR
iRST_n => idle_count[16].ACLR
iRST_n => idle_count[17].ACLR
iRST_n => idle_count_flag.ACLR
iRST_n => state_count[0].ACLR
iRST_n => state_count[1].ACLR
iRST_n => state_count[2].ACLR
iRST_n => state_count[3].ACLR
iRST_n => state_count[4].ACLR
iRST_n => state_count[5].ACLR
iRST_n => state_count[6].ACLR
iRST_n => state_count[7].ACLR
iRST_n => state_count[8].ACLR
iRST_n => state_count[9].ACLR
iRST_n => state_count[10].ACLR
iRST_n => state_count[11].ACLR
iRST_n => state_count[12].ACLR
iRST_n => state_count[13].ACLR
iRST_n => state_count[14].ACLR
iRST_n => state_count[15].ACLR
iRST_n => state_count[16].ACLR
iRST_n => state_count[17].ACLR
iRST_n => state_count_flag.ACLR
iRST_n => data_count[0].ACLR
iRST_n => data_count[1].ACLR
iRST_n => data_count[2].ACLR
iRST_n => data_count[3].ACLR
iRST_n => data_count[4].ACLR
iRST_n => data_count[5].ACLR
iRST_n => data_count[6].ACLR
iRST_n => data_count[7].ACLR
iRST_n => data_count[8].ACLR
iRST_n => data_count[9].ACLR
iRST_n => data_count[10].ACLR
iRST_n => data_count[11].ACLR
iRST_n => data_count[12].ACLR
iRST_n => data_count[13].ACLR
iRST_n => data_count[14].ACLR
iRST_n => data_count[15].ACLR
iRST_n => data_count[16].ACLR
iRST_n => data_count[17].ACLR
iRST_n => data_count_flag.ACLR
iRST_n => bitcount[0].ACLR
iRST_n => bitcount[1].ACLR
iRST_n => bitcount[2].ACLR
iRST_n => bitcount[3].ACLR
iRST_n => bitcount[4].ACLR
iRST_n => bitcount[5].ACLR
iRST_n => data[0].ACLR
iRST_n => data[1].ACLR
iRST_n => data[2].ACLR
iRST_n => data[3].ACLR
iRST_n => data[4].ACLR
iRST_n => data[5].ACLR
iRST_n => data[6].ACLR
iRST_n => data[7].ACLR
iRST_n => data[8].ACLR
iRST_n => data[9].ACLR
iRST_n => data[10].ACLR
iRST_n => data[11].ACLR
iRST_n => data[12].ACLR
iRST_n => data[13].ACLR
iRST_n => data[14].ACLR
iRST_n => data[15].ACLR
iRST_n => data[16].ACLR
iRST_n => data[17].ACLR
iRST_n => data[18].ACLR
iRST_n => data[19].ACLR
iRST_n => data[20].ACLR
iRST_n => data[21].ACLR
iRST_n => data[22].ACLR
iRST_n => data[23].ACLR
iRST_n => data[24].ACLR
iRST_n => data[25].ACLR
iRST_n => data[26].ACLR
iRST_n => data[27].ACLR
iRST_n => data[28].ACLR
iRST_n => data[29].ACLR
iRST_n => data[30].ACLR
iRST_n => data[31].ACLR
iRST_n => state~3.DATAIN
iRST_n => data_buf[31].ENA
iRST_n => data_buf[30].ENA
iRST_n => data_buf[29].ENA
iRST_n => data_buf[28].ENA
iRST_n => data_buf[27].ENA
iRST_n => data_buf[26].ENA
iRST_n => data_buf[25].ENA
iRST_n => data_buf[24].ENA
iRST_n => data_buf[23].ENA
iRST_n => data_buf[22].ENA
iRST_n => data_buf[21].ENA
iRST_n => data_buf[20].ENA
iRST_n => data_buf[19].ENA
iRST_n => data_buf[18].ENA
iRST_n => data_buf[17].ENA
iRST_n => data_buf[16].ENA
iRST_n => data_buf[15].ENA
iRST_n => data_buf[14].ENA
iRST_n => data_buf[13].ENA
iRST_n => data_buf[12].ENA
iRST_n => data_buf[11].ENA
iRST_n => data_buf[10].ENA
iRST_n => data_buf[9].ENA
iRST_n => data_buf[8].ENA
iRST_n => data_buf[7].ENA
iRST_n => data_buf[6].ENA
iRST_n => data_buf[5].ENA
iRST_n => data_buf[4].ENA
iRST_n => data_buf[3].ENA
iRST_n => data_buf[2].ENA
iRST_n => data_buf[1].ENA
iRST_n => data_buf[0].ENA
iIRDA => always3.IN0
iIRDA => always5.IN0
iIRDA => always1.IN0
oDATA_READY <= data_ready.DB_MAX_OUTPUT_PORT_TYPE
oDATA[0] <= oDATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[1] <= oDATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[2] <= oDATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[3] <= oDATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[4] <= oDATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[5] <= oDATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[6] <= oDATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[7] <= oDATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[8] <= oDATA[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[9] <= oDATA[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[10] <= oDATA[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[11] <= oDATA[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[12] <= oDATA[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[13] <= oDATA[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[14] <= oDATA[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[15] <= oDATA[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[16] <= oDATA[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[17] <= oDATA[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[18] <= oDATA[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[19] <= oDATA[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[20] <= oDATA[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[21] <= oDATA[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[22] <= oDATA[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[23] <= oDATA[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[24] <= oDATA[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[25] <= oDATA[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[26] <= oDATA[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[27] <= oDATA[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[28] <= oDATA[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[29] <= oDATA[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[30] <= oDATA[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[31] <= oDATA[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|STATE_Manager:comb_3|COUNTDOWN_SEG:counting_down
clk => current_digit[0]~reg0.CLK
clk => current_digit[1]~reg0.CLK
clk => current_digit[2]~reg0.CLK
clk => current_digit[3]~reg0.CLK
clk => flag~reg0.CLK
clk => countdown_val[0].CLK
clk => countdown_val[1].CLK
clk => countdown_val[2].CLK
clk => countdown_val[3].CLK
clk => second_counter[0].CLK
clk => second_counter[1].CLK
clk => second_counter[2].CLK
clk => second_counter[3].CLK
clk => second_counter[4].CLK
clk => second_counter[5].CLK
clk => second_counter[6].CLK
clk => second_counter[7].CLK
clk => second_counter[8].CLK
clk => second_counter[9].CLK
clk => second_counter[10].CLK
clk => second_counter[11].CLK
clk => second_counter[12].CLK
clk => second_counter[13].CLK
clk => second_counter[14].CLK
clk => second_counter[15].CLK
clk => second_counter[16].CLK
clk => second_counter[17].CLK
clk => second_counter[18].CLK
clk => second_counter[19].CLK
clk => second_counter[20].CLK
clk => second_counter[21].CLK
clk => second_counter[22].CLK
clk => second_counter[23].CLK
clk => second_counter[24].CLK
clk => second_counter[25].CLK
state[0] => Equal0.IN2
state[1] => Equal0.IN1
state[2] => Equal0.IN3
state[3] => Equal0.IN0
flag <= flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_digit[0] <= current_digit[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_digit[1] <= current_digit[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_digit[2] <= current_digit[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_digit[3] <= current_digit[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|LCD_module:ready_to_play
clk => clk.IN1
rst_n => rst_n.IN1
state[0] => Decoder0.IN3
state[1] => Decoder0.IN2
state[2] => Decoder0.IN1
state[3] => Decoder0.IN0
LCD_DATA[0] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[1] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[2] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[3] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[4] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[5] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[6] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[7] <= LCD_Controller:u0.LCD_DATA
LCD_RW <= LCD_Controller:u0.LCD_RW
LCD_EN <= LCD_Controller:u0.LCD_EN
LCD_RS <= LCD_Controller:u0.LCD_RS


|TOP_Module|LCD_module:ready_to_play|LCD_Controller:u0
iDATA[0] => LCD_DATA[0].DATAIN
iDATA[1] => LCD_DATA[1].DATAIN
iDATA[2] => LCD_DATA[2].DATAIN
iDATA[3] => LCD_DATA[3].DATAIN
iDATA[4] => LCD_DATA[4].DATAIN
iDATA[5] => LCD_DATA[5].DATAIN
iDATA[6] => LCD_DATA[6].DATAIN
iDATA[7] => LCD_DATA[7].DATAIN
iRS => LCD_RS.DATAIN
iStart => preStart.DATAIN
iStart => Equal0.IN0
oDone <= oDone~reg0.DB_MAX_OUTPUT_PORT_TYPE
iCLK => Cont[0].CLK
iCLK => Cont[1].CLK
iCLK => Cont[2].CLK
iCLK => Cont[3].CLK
iCLK => Cont[4].CLK
iCLK => mStart.CLK
iCLK => preStart.CLK
iCLK => LCD_EN~reg0.CLK
iCLK => oDone~reg0.CLK
iCLK => ST~5.DATAIN
iRST_N => Cont[0].ACLR
iRST_N => Cont[1].ACLR
iRST_N => Cont[2].ACLR
iRST_N => Cont[3].ACLR
iRST_N => Cont[4].ACLR
iRST_N => mStart.ACLR
iRST_N => preStart.ACLR
iRST_N => LCD_EN~reg0.ACLR
iRST_N => oDone~reg0.ACLR
iRST_N => ST~7.DATAIN
LCD_DATA[0] <= iDATA[0].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[1] <= iDATA[1].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[2] <= iDATA[2].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[3] <= iDATA[3].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[4] <= iDATA[4].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[5] <= iDATA[5].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[6] <= iDATA[6].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[7] <= iDATA[7].DB_MAX_OUTPUT_PORT_TYPE
LCD_RW <= <GND>
LCD_EN <= LCD_EN~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_RS <= iRS.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|power_selection:select_your_power
clk => oHEX_D2[0]~reg0.CLK
clk => oHEX_D2[1]~reg0.CLK
clk => oHEX_D2[2]~reg0.CLK
clk => oHEX_D2[3]~reg0.CLK
clk => oHEX_D2[4]~reg0.CLK
clk => oHEX_D2[5]~reg0.CLK
clk => oHEX_D2[6]~reg0.CLK
clk => oHEX_D1[0]~reg0.CLK
clk => oHEX_D1[1]~reg0.CLK
clk => oHEX_D1[2]~reg0.CLK
clk => oHEX_D1[3]~reg0.CLK
clk => oHEX_D1[4]~reg0.CLK
clk => oHEX_D1[5]~reg0.CLK
clk => oHEX_D1[6]~reg0.CLK
state[0] => Mux0.IN7
state[0] => Mux1.IN7
state[0] => Mux2.IN7
state[0] => Mux3.IN7
state[0] => Mux4.IN7
state[0] => Mux5.IN7
state[0] => Mux6.IN7
state[0] => Mux7.IN7
state[0] => Mux8.IN7
state[0] => Mux9.IN7
state[0] => Mux10.IN7
state[0] => Decoder0.IN3
state[0] => Mux11.IN7
state[1] => Mux0.IN6
state[1] => Mux1.IN6
state[1] => Mux2.IN6
state[1] => Mux3.IN6
state[1] => Mux4.IN6
state[1] => Mux5.IN6
state[1] => Mux6.IN6
state[1] => Mux7.IN6
state[1] => Mux8.IN6
state[1] => Mux9.IN6
state[1] => Mux10.IN6
state[1] => Decoder0.IN2
state[1] => Mux11.IN6
state[2] => Mux0.IN5
state[2] => Mux1.IN5
state[2] => Mux2.IN5
state[2] => Mux3.IN5
state[2] => Mux4.IN5
state[2] => Mux5.IN5
state[2] => Mux6.IN5
state[2] => Mux7.IN5
state[2] => Mux8.IN5
state[2] => Mux9.IN5
state[2] => Mux10.IN5
state[2] => Decoder0.IN1
state[2] => Mux11.IN5
state[3] => Mux0.IN4
state[3] => Mux1.IN4
state[3] => Mux2.IN4
state[3] => Mux3.IN4
state[3] => Mux4.IN4
state[3] => Mux5.IN4
state[3] => Mux6.IN4
state[3] => Mux7.IN4
state[3] => Mux8.IN4
state[3] => Mux9.IN4
state[3] => Mux10.IN4
state[3] => Decoder0.IN0
state[3] => Mux11.IN4
oHEX_D2[0] <= oHEX_D2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D2[1] <= oHEX_D2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D2[2] <= oHEX_D2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D2[3] <= oHEX_D2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D2[4] <= oHEX_D2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D2[5] <= oHEX_D2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D2[6] <= oHEX_D2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[0] <= oHEX_D1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[1] <= oHEX_D1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[2] <= oHEX_D1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[3] <= oHEX_D1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[4] <= oHEX_D1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[5] <= oHEX_D1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[6] <= oHEX_D1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|DISPLAY_SEG:display_countdown
clk => ~NO_FANOUT~
digit[0] => Decoder0.IN3
digit[1] => Decoder0.IN2
digit[2] => Decoder0.IN1
digit[3] => Decoder0.IN0
segments[0] <= segments.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= segments.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


