|TOP_Module
clk_50Mhz => clk_50Mhz.IN6
reset => reset.IN1
ir_input => ir_input.IN1
SW[0] => SW[0].IN1
SW[1] => SW[1].IN1
SW[2] => SW[2].IN1
SW[3] => SW[3].IN1
SW[4] => SW[4].IN1
SW[5] => SW[5].IN1
SW[6] => SW[6].IN1
SW[7] => SW[7].IN1
SW[8] => SW[8].IN1
PW => PW.IN1
LEDR[0] <= STATE_Manager:comb_3.LEDR
LEDR[1] <= STATE_Manager:comb_3.LEDR
LEDR[2] <= STATE_Manager:comb_3.LEDR
LEDR[3] <= STATE_Manager:comb_3.LEDR
LEDR[4] <= STATE_Manager:comb_3.LEDR
LEDR[5] <= STATE_Manager:comb_3.LEDR
LEDR[6] <= STATE_Manager:comb_3.LEDR
LEDR[7] <= STATE_Manager:comb_3.LEDR
LEDR[8] <= STATE_Manager:comb_3.LEDR
LEDR[9] <= STATE_Manager:comb_3.LEDR
LEDR[10] <= STATE_Manager:comb_3.LEDR
LEDR[11] <= STATE_Manager:comb_3.LEDR
LEDR[12] <= STATE_Manager:comb_3.LEDR
LEDR[13] <= STATE_Manager:comb_3.LEDR
LEDR[14] <= STATE_Manager:comb_3.LEDR
LEDR[15] <= STATE_Manager:comb_3.LEDR
LEDR[16] <= STATE_Manager:comb_3.LEDR
LEDR[17] <= STATE_Manager:comb_3.LEDR
LEDG[0] <= STATE_Manager:comb_3.LEDG
LEDG[1] <= STATE_Manager:comb_3.LEDG
LEDG[2] <= STATE_Manager:comb_3.LEDG
LEDG[3] <= STATE_Manager:comb_3.LEDG
LEDG[4] <= STATE_Manager:comb_3.LEDG
LEDG[5] <= STATE_Manager:comb_3.LEDG
LEDG[6] <= STATE_Manager:comb_3.LEDG
LEDG[7] <= STATE_Manager:comb_3.LEDG
lcd_data[0] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[1] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[2] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[3] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[4] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[5] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[6] <= LCD_module:ready_to_play.LCD_DATA
lcd_data[7] <= LCD_module:ready_to_play.LCD_DATA
lcd_rw <= LCD_module:ready_to_play.LCD_RW
lcd_en <= LCD_module:ready_to_play.LCD_EN
lcd_rs <= LCD_module:ready_to_play.LCD_RS
HEX0[0] <= power_selection:select_your_power.oHEX_D1
HEX0[1] <= power_selection:select_your_power.oHEX_D1
HEX0[2] <= power_selection:select_your_power.oHEX_D1
HEX0[3] <= power_selection:select_your_power.oHEX_D1
HEX0[4] <= power_selection:select_your_power.oHEX_D1
HEX0[5] <= power_selection:select_your_power.oHEX_D1
HEX0[6] <= power_selection:select_your_power.oHEX_D1
HEX1[0] <= power_selection:select_your_power.oHEX_D2
HEX1[1] <= power_selection:select_your_power.oHEX_D2
HEX1[2] <= power_selection:select_your_power.oHEX_D2
HEX1[3] <= power_selection:select_your_power.oHEX_D2
HEX1[4] <= power_selection:select_your_power.oHEX_D2
HEX1[5] <= power_selection:select_your_power.oHEX_D2
HEX1[6] <= power_selection:select_your_power.oHEX_D2
HEX2[0] <= DISPLAY_SEG:display_countdown.segments
HEX2[1] <= DISPLAY_SEG:display_countdown.segments
HEX2[2] <= DISPLAY_SEG:display_countdown.segments
HEX2[3] <= DISPLAY_SEG:display_countdown.segments
HEX2[4] <= DISPLAY_SEG:display_countdown.segments
HEX2[5] <= DISPLAY_SEG:display_countdown.segments
HEX2[6] <= DISPLAY_SEG:display_countdown.segments
VGA_CLK <= DE2_115_Default:vga.VGA_CLK
VGA_BLANK_N <= DE2_115_Default:vga.VGA_BLANK_N
VGA_HS <= DE2_115_Default:vga.VGA_HS
VGA_VS <= DE2_115_Default:vga.VGA_VS
VGA_R[0] <= DE2_115_Default:vga.VGA_R
VGA_R[1] <= DE2_115_Default:vga.VGA_R
VGA_R[2] <= DE2_115_Default:vga.VGA_R
VGA_R[3] <= DE2_115_Default:vga.VGA_R
VGA_R[4] <= DE2_115_Default:vga.VGA_R
VGA_R[5] <= DE2_115_Default:vga.VGA_R
VGA_R[6] <= DE2_115_Default:vga.VGA_R
VGA_R[7] <= DE2_115_Default:vga.VGA_R
VGA_G[0] <= DE2_115_Default:vga.VGA_G
VGA_G[1] <= DE2_115_Default:vga.VGA_G
VGA_G[2] <= DE2_115_Default:vga.VGA_G
VGA_G[3] <= DE2_115_Default:vga.VGA_G
VGA_G[4] <= DE2_115_Default:vga.VGA_G
VGA_G[5] <= DE2_115_Default:vga.VGA_G
VGA_G[6] <= DE2_115_Default:vga.VGA_G
VGA_G[7] <= DE2_115_Default:vga.VGA_G
VGA_B[0] <= DE2_115_Default:vga.VGA_B
VGA_B[1] <= DE2_115_Default:vga.VGA_B
VGA_B[2] <= DE2_115_Default:vga.VGA_B
VGA_B[3] <= DE2_115_Default:vga.VGA_B
VGA_B[4] <= DE2_115_Default:vga.VGA_B
VGA_B[5] <= DE2_115_Default:vga.VGA_B
VGA_B[6] <= DE2_115_Default:vga.VGA_B
VGA_B[7] <= DE2_115_Default:vga.VGA_B


|TOP_Module|clock_devider:clk_div
clk_in => clk_out_slow~reg0.CLK
clk_in => counter1[0].CLK
clk_in => counter1[1].CLK
clk_in => counter1[2].CLK
clk_in => counter1[3].CLK
clk_in => counter1[4].CLK
clk_in => counter1[5].CLK
clk_in => counter1[6].CLK
clk_in => counter1[7].CLK
clk_in => counter1[8].CLK
clk_in => counter1[9].CLK
clk_in => counter1[10].CLK
clk_in => counter1[11].CLK
clk_in => counter1[12].CLK
clk_in => counter1[13].CLK
clk_in => counter1[14].CLK
clk_in => counter1[15].CLK
clk_in => counter1[16].CLK
clk_in => counter1[17].CLK
clk_in => counter1[18].CLK
clk_in => counter1[19].CLK
clk_in => counter1[20].CLK
clk_in => counter1[21].CLK
clk_in => counter1[22].CLK
clk_in => counter1[23].CLK
clk_in => counter1[24].CLK
clk_in => counter1[25].CLK
clk_in => counter1[26].CLK
clk_in => counter1[27].CLK
clk_in => counter1[28].CLK
clk_in => counter1[29].CLK
clk_in => clk_out~reg0.CLK
clk_in => counter[0].CLK
clk_in => counter[1].CLK
clk_in => counter[2].CLK
clk_in => counter[3].CLK
clk_in => counter[4].CLK
clk_in => counter[5].CLK
clk_in => counter[6].CLK
clk_in => counter[7].CLK
clk_in => counter[8].CLK
clk_in => counter[9].CLK
clk_in => counter[10].CLK
clk_in => counter[11].CLK
clk_in => counter[12].CLK
clk_in => counter[13].CLK
clk_in => counter[14].CLK
clk_in => counter[15].CLK
clk_in => counter[16].CLK
clk_in => counter[17].CLK
clk_in => counter[18].CLK
clk_in => counter[19].CLK
clk_in => counter[20].CLK
clk_in => counter[21].CLK
clk_in => counter[22].CLK
clk_in => counter[23].CLK
clk_in => counter[24].CLK
clk_in => counter[25].CLK
clk_in => counter[26].CLK
clk_in => counter[27].CLK
clk_in => counter[28].CLK
clk_in => counter[29].CLK
clk_out <= clk_out~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk_out_slow <= clk_out_slow~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|STATE_Manager:comb_3
clk => clk.IN2
clk_slow => ~NO_FANOUT~
reset => reset.IN1
ir_input => ir_input.IN1
PW => state.OUTPUTSELECT
PW => state.OUTPUTSELECT
PW => state.OUTPUTSELECT
PW => state.OUTPUTSELECT
LEDR[0] <= LEDR[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[1] <= LEDR[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[2] <= LEDR[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[3] <= LEDR[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[4] <= LEDR[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[5] <= LEDR[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[6] <= LEDR[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[7] <= LEDR[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[8] <= LEDR[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[9] <= LEDR[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[10] <= LEDR[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[11] <= LEDR[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[12] <= LEDR[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[13] <= LEDR[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[14] <= LEDR[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[15] <= LEDR[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[16] <= LEDR[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDR[17] <= LEDR[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[0] <= LEDG[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[1] <= LEDG[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[2] <= LEDG[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[3] <= LEDG[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[4] <= LEDG[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[5] <= LEDG[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[6] <= LEDG[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
LEDG[7] <= LEDG[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
SW[0] => state.OUTPUTSELECT
SW[0] => state.OUTPUTSELECT
SW[0] => state.OUTPUTSELECT
SW[0] => state.OUTPUTSELECT
SW[1] => state.OUTPUTSELECT
SW[1] => state.OUTPUTSELECT
SW[1] => state.OUTPUTSELECT
SW[1] => state.OUTPUTSELECT
SW[2] => state.OUTPUTSELECT
SW[2] => state.OUTPUTSELECT
SW[2] => state.OUTPUTSELECT
SW[2] => state.OUTPUTSELECT
SW[3] => always0.IN0
SW[3] => always0.IN0
SW[3] => always0.IN0
SW[4] => always0.IN1
SW[4] => always0.IN1
SW[4] => always0.IN1
SW[5] => state.OUTPUTSELECT
SW[5] => state.OUTPUTSELECT
SW[5] => state.OUTPUTSELECT
SW[5] => state.OUTPUTSELECT
SW[5] => chosen_code_coder.OUTPUTSELECT
SW[5] => chosen_code_coder.OUTPUTSELECT
SW[5] => chosen_code_coder.OUTPUTSELECT
SW[5] => chosen_code_coder.OUTPUTSELECT
SW[5] => chosen_code_coder.OUTPUTSELECT
SW[5] => chosen_code_coder.OUTPUTSELECT
SW[5] => chosen_code_coder.OUTPUTSELECT
SW[5] => chosen_code_coder.OUTPUTSELECT
SW[6] => state.OUTPUTSELECT
SW[6] => state.OUTPUTSELECT
SW[6] => state.OUTPUTSELECT
SW[6] => state.OUTPUTSELECT
SW[7] => ~NO_FANOUT~
SW[8] => ~NO_FANOUT~
state[0] <= state[0].DB_MAX_OUTPUT_PORT_TYPE
state[1] <= state[1].DB_MAX_OUTPUT_PORT_TYPE
state[2] <= state[2].DB_MAX_OUTPUT_PORT_TYPE
state[3] <= state[3].DB_MAX_OUTPUT_PORT_TYPE
current_digit[0] <= COUNTDOWN_SEG:counting_down.current_digit
current_digit[1] <= COUNTDOWN_SEG:counting_down.current_digit
current_digit[2] <= COUNTDOWN_SEG:counting_down.current_digit
current_digit[3] <= COUNTDOWN_SEG:counting_down.current_digit


|TOP_Module|STATE_Manager:comb_3|IR_RECEIVER:read_ir
iCLK => oDATA[0]~reg0.CLK
iCLK => oDATA[1]~reg0.CLK
iCLK => oDATA[2]~reg0.CLK
iCLK => oDATA[3]~reg0.CLK
iCLK => oDATA[4]~reg0.CLK
iCLK => oDATA[5]~reg0.CLK
iCLK => oDATA[6]~reg0.CLK
iCLK => oDATA[7]~reg0.CLK
iCLK => oDATA[8]~reg0.CLK
iCLK => oDATA[9]~reg0.CLK
iCLK => oDATA[10]~reg0.CLK
iCLK => oDATA[11]~reg0.CLK
iCLK => oDATA[12]~reg0.CLK
iCLK => oDATA[13]~reg0.CLK
iCLK => oDATA[14]~reg0.CLK
iCLK => oDATA[15]~reg0.CLK
iCLK => oDATA[16]~reg0.CLK
iCLK => oDATA[17]~reg0.CLK
iCLK => oDATA[18]~reg0.CLK
iCLK => oDATA[19]~reg0.CLK
iCLK => oDATA[20]~reg0.CLK
iCLK => oDATA[21]~reg0.CLK
iCLK => oDATA[22]~reg0.CLK
iCLK => oDATA[23]~reg0.CLK
iCLK => oDATA[24]~reg0.CLK
iCLK => oDATA[25]~reg0.CLK
iCLK => oDATA[26]~reg0.CLK
iCLK => oDATA[27]~reg0.CLK
iCLK => oDATA[28]~reg0.CLK
iCLK => oDATA[29]~reg0.CLK
iCLK => oDATA[30]~reg0.CLK
iCLK => oDATA[31]~reg0.CLK
iCLK => data_buf[0].CLK
iCLK => data_buf[1].CLK
iCLK => data_buf[2].CLK
iCLK => data_buf[3].CLK
iCLK => data_buf[4].CLK
iCLK => data_buf[5].CLK
iCLK => data_buf[6].CLK
iCLK => data_buf[7].CLK
iCLK => data_buf[8].CLK
iCLK => data_buf[9].CLK
iCLK => data_buf[10].CLK
iCLK => data_buf[11].CLK
iCLK => data_buf[12].CLK
iCLK => data_buf[13].CLK
iCLK => data_buf[14].CLK
iCLK => data_buf[15].CLK
iCLK => data_buf[16].CLK
iCLK => data_buf[17].CLK
iCLK => data_buf[18].CLK
iCLK => data_buf[19].CLK
iCLK => data_buf[20].CLK
iCLK => data_buf[21].CLK
iCLK => data_buf[22].CLK
iCLK => data_buf[23].CLK
iCLK => data_buf[24].CLK
iCLK => data_buf[25].CLK
iCLK => data_buf[26].CLK
iCLK => data_buf[27].CLK
iCLK => data_buf[28].CLK
iCLK => data_buf[29].CLK
iCLK => data_buf[30].CLK
iCLK => data_buf[31].CLK
iCLK => data_ready.CLK
iCLK => data[0].CLK
iCLK => data[1].CLK
iCLK => data[2].CLK
iCLK => data[3].CLK
iCLK => data[4].CLK
iCLK => data[5].CLK
iCLK => data[6].CLK
iCLK => data[7].CLK
iCLK => data[8].CLK
iCLK => data[9].CLK
iCLK => data[10].CLK
iCLK => data[11].CLK
iCLK => data[12].CLK
iCLK => data[13].CLK
iCLK => data[14].CLK
iCLK => data[15].CLK
iCLK => data[16].CLK
iCLK => data[17].CLK
iCLK => data[18].CLK
iCLK => data[19].CLK
iCLK => data[20].CLK
iCLK => data[21].CLK
iCLK => data[22].CLK
iCLK => data[23].CLK
iCLK => data[24].CLK
iCLK => data[25].CLK
iCLK => data[26].CLK
iCLK => data[27].CLK
iCLK => data[28].CLK
iCLK => data[29].CLK
iCLK => data[30].CLK
iCLK => data[31].CLK
iCLK => bitcount[0].CLK
iCLK => bitcount[1].CLK
iCLK => bitcount[2].CLK
iCLK => bitcount[3].CLK
iCLK => bitcount[4].CLK
iCLK => bitcount[5].CLK
iCLK => data_count_flag.CLK
iCLK => data_count[0].CLK
iCLK => data_count[1].CLK
iCLK => data_count[2].CLK
iCLK => data_count[3].CLK
iCLK => data_count[4].CLK
iCLK => data_count[5].CLK
iCLK => data_count[6].CLK
iCLK => data_count[7].CLK
iCLK => data_count[8].CLK
iCLK => data_count[9].CLK
iCLK => data_count[10].CLK
iCLK => data_count[11].CLK
iCLK => data_count[12].CLK
iCLK => data_count[13].CLK
iCLK => data_count[14].CLK
iCLK => data_count[15].CLK
iCLK => data_count[16].CLK
iCLK => data_count[17].CLK
iCLK => state_count_flag.CLK
iCLK => state_count[0].CLK
iCLK => state_count[1].CLK
iCLK => state_count[2].CLK
iCLK => state_count[3].CLK
iCLK => state_count[4].CLK
iCLK => state_count[5].CLK
iCLK => state_count[6].CLK
iCLK => state_count[7].CLK
iCLK => state_count[8].CLK
iCLK => state_count[9].CLK
iCLK => state_count[10].CLK
iCLK => state_count[11].CLK
iCLK => state_count[12].CLK
iCLK => state_count[13].CLK
iCLK => state_count[14].CLK
iCLK => state_count[15].CLK
iCLK => state_count[16].CLK
iCLK => state_count[17].CLK
iCLK => idle_count_flag.CLK
iCLK => idle_count[0].CLK
iCLK => idle_count[1].CLK
iCLK => idle_count[2].CLK
iCLK => idle_count[3].CLK
iCLK => idle_count[4].CLK
iCLK => idle_count[5].CLK
iCLK => idle_count[6].CLK
iCLK => idle_count[7].CLK
iCLK => idle_count[8].CLK
iCLK => idle_count[9].CLK
iCLK => idle_count[10].CLK
iCLK => idle_count[11].CLK
iCLK => idle_count[12].CLK
iCLK => idle_count[13].CLK
iCLK => idle_count[14].CLK
iCLK => idle_count[15].CLK
iCLK => idle_count[16].CLK
iCLK => idle_count[17].CLK
iCLK => state~1.DATAIN
iRST_n => data_ready.ACLR
iRST_n => oDATA[0]~reg0.ACLR
iRST_n => oDATA[1]~reg0.ACLR
iRST_n => oDATA[2]~reg0.ACLR
iRST_n => oDATA[3]~reg0.ACLR
iRST_n => oDATA[4]~reg0.ACLR
iRST_n => oDATA[5]~reg0.ACLR
iRST_n => oDATA[6]~reg0.ACLR
iRST_n => oDATA[7]~reg0.ACLR
iRST_n => oDATA[8]~reg0.ACLR
iRST_n => oDATA[9]~reg0.ACLR
iRST_n => oDATA[10]~reg0.ACLR
iRST_n => oDATA[11]~reg0.ACLR
iRST_n => oDATA[12]~reg0.ACLR
iRST_n => oDATA[13]~reg0.ACLR
iRST_n => oDATA[14]~reg0.ACLR
iRST_n => oDATA[15]~reg0.ACLR
iRST_n => oDATA[16]~reg0.ACLR
iRST_n => oDATA[17]~reg0.ACLR
iRST_n => oDATA[18]~reg0.ACLR
iRST_n => oDATA[19]~reg0.ACLR
iRST_n => oDATA[20]~reg0.ACLR
iRST_n => oDATA[21]~reg0.ACLR
iRST_n => oDATA[22]~reg0.ACLR
iRST_n => oDATA[23]~reg0.ACLR
iRST_n => oDATA[24]~reg0.ACLR
iRST_n => oDATA[25]~reg0.ACLR
iRST_n => oDATA[26]~reg0.ACLR
iRST_n => oDATA[27]~reg0.ACLR
iRST_n => oDATA[28]~reg0.ACLR
iRST_n => oDATA[29]~reg0.ACLR
iRST_n => oDATA[30]~reg0.ACLR
iRST_n => oDATA[31]~reg0.ACLR
iRST_n => idle_count[0].ACLR
iRST_n => idle_count[1].ACLR
iRST_n => idle_count[2].ACLR
iRST_n => idle_count[3].ACLR
iRST_n => idle_count[4].ACLR
iRST_n => idle_count[5].ACLR
iRST_n => idle_count[6].ACLR
iRST_n => idle_count[7].ACLR
iRST_n => idle_count[8].ACLR
iRST_n => idle_count[9].ACLR
iRST_n => idle_count[10].ACLR
iRST_n => idle_count[11].ACLR
iRST_n => idle_count[12].ACLR
iRST_n => idle_count[13].ACLR
iRST_n => idle_count[14].ACLR
iRST_n => idle_count[15].ACLR
iRST_n => idle_count[16].ACLR
iRST_n => idle_count[17].ACLR
iRST_n => idle_count_flag.ACLR
iRST_n => state_count[0].ACLR
iRST_n => state_count[1].ACLR
iRST_n => state_count[2].ACLR
iRST_n => state_count[3].ACLR
iRST_n => state_count[4].ACLR
iRST_n => state_count[5].ACLR
iRST_n => state_count[6].ACLR
iRST_n => state_count[7].ACLR
iRST_n => state_count[8].ACLR
iRST_n => state_count[9].ACLR
iRST_n => state_count[10].ACLR
iRST_n => state_count[11].ACLR
iRST_n => state_count[12].ACLR
iRST_n => state_count[13].ACLR
iRST_n => state_count[14].ACLR
iRST_n => state_count[15].ACLR
iRST_n => state_count[16].ACLR
iRST_n => state_count[17].ACLR
iRST_n => state_count_flag.ACLR
iRST_n => data_count[0].ACLR
iRST_n => data_count[1].ACLR
iRST_n => data_count[2].ACLR
iRST_n => data_count[3].ACLR
iRST_n => data_count[4].ACLR
iRST_n => data_count[5].ACLR
iRST_n => data_count[6].ACLR
iRST_n => data_count[7].ACLR
iRST_n => data_count[8].ACLR
iRST_n => data_count[9].ACLR
iRST_n => data_count[10].ACLR
iRST_n => data_count[11].ACLR
iRST_n => data_count[12].ACLR
iRST_n => data_count[13].ACLR
iRST_n => data_count[14].ACLR
iRST_n => data_count[15].ACLR
iRST_n => data_count[16].ACLR
iRST_n => data_count[17].ACLR
iRST_n => data_count_flag.ACLR
iRST_n => bitcount[0].ACLR
iRST_n => bitcount[1].ACLR
iRST_n => bitcount[2].ACLR
iRST_n => bitcount[3].ACLR
iRST_n => bitcount[4].ACLR
iRST_n => bitcount[5].ACLR
iRST_n => data[0].ACLR
iRST_n => data[1].ACLR
iRST_n => data[2].ACLR
iRST_n => data[3].ACLR
iRST_n => data[4].ACLR
iRST_n => data[5].ACLR
iRST_n => data[6].ACLR
iRST_n => data[7].ACLR
iRST_n => data[8].ACLR
iRST_n => data[9].ACLR
iRST_n => data[10].ACLR
iRST_n => data[11].ACLR
iRST_n => data[12].ACLR
iRST_n => data[13].ACLR
iRST_n => data[14].ACLR
iRST_n => data[15].ACLR
iRST_n => data[16].ACLR
iRST_n => data[17].ACLR
iRST_n => data[18].ACLR
iRST_n => data[19].ACLR
iRST_n => data[20].ACLR
iRST_n => data[21].ACLR
iRST_n => data[22].ACLR
iRST_n => data[23].ACLR
iRST_n => data[24].ACLR
iRST_n => data[25].ACLR
iRST_n => data[26].ACLR
iRST_n => data[27].ACLR
iRST_n => data[28].ACLR
iRST_n => data[29].ACLR
iRST_n => data[30].ACLR
iRST_n => data[31].ACLR
iRST_n => state~3.DATAIN
iRST_n => data_buf[31].ENA
iRST_n => data_buf[30].ENA
iRST_n => data_buf[29].ENA
iRST_n => data_buf[28].ENA
iRST_n => data_buf[27].ENA
iRST_n => data_buf[26].ENA
iRST_n => data_buf[25].ENA
iRST_n => data_buf[24].ENA
iRST_n => data_buf[23].ENA
iRST_n => data_buf[22].ENA
iRST_n => data_buf[21].ENA
iRST_n => data_buf[20].ENA
iRST_n => data_buf[19].ENA
iRST_n => data_buf[18].ENA
iRST_n => data_buf[17].ENA
iRST_n => data_buf[16].ENA
iRST_n => data_buf[15].ENA
iRST_n => data_buf[14].ENA
iRST_n => data_buf[13].ENA
iRST_n => data_buf[12].ENA
iRST_n => data_buf[11].ENA
iRST_n => data_buf[10].ENA
iRST_n => data_buf[9].ENA
iRST_n => data_buf[8].ENA
iRST_n => data_buf[7].ENA
iRST_n => data_buf[6].ENA
iRST_n => data_buf[5].ENA
iRST_n => data_buf[4].ENA
iRST_n => data_buf[3].ENA
iRST_n => data_buf[2].ENA
iRST_n => data_buf[1].ENA
iRST_n => data_buf[0].ENA
iIRDA => always3.IN0
iIRDA => always5.IN0
iIRDA => always1.IN0
oDATA_READY <= data_ready.DB_MAX_OUTPUT_PORT_TYPE
oDATA[0] <= oDATA[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[1] <= oDATA[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[2] <= oDATA[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[3] <= oDATA[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[4] <= oDATA[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[5] <= oDATA[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[6] <= oDATA[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[7] <= oDATA[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[8] <= oDATA[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[9] <= oDATA[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[10] <= oDATA[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[11] <= oDATA[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[12] <= oDATA[12]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[13] <= oDATA[13]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[14] <= oDATA[14]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[15] <= oDATA[15]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[16] <= oDATA[16]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[17] <= oDATA[17]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[18] <= oDATA[18]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[19] <= oDATA[19]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[20] <= oDATA[20]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[21] <= oDATA[21]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[22] <= oDATA[22]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[23] <= oDATA[23]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[24] <= oDATA[24]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[25] <= oDATA[25]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[26] <= oDATA[26]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[27] <= oDATA[27]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[28] <= oDATA[28]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[29] <= oDATA[29]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[30] <= oDATA[30]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oDATA[31] <= oDATA[31]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|STATE_Manager:comb_3|COUNTDOWN_SEG:counting_down
clk => current_digit[0]~reg0.CLK
clk => current_digit[1]~reg0.CLK
clk => current_digit[2]~reg0.CLK
clk => current_digit[3]~reg0.CLK
clk => countdown_val[0].CLK
clk => countdown_val[1].CLK
clk => countdown_val[2].CLK
clk => countdown_val[3].CLK
clk => second_counter[0].CLK
clk => second_counter[1].CLK
clk => second_counter[2].CLK
clk => second_counter[3].CLK
clk => second_counter[4].CLK
clk => second_counter[5].CLK
clk => second_counter[6].CLK
clk => second_counter[7].CLK
clk => second_counter[8].CLK
clk => second_counter[9].CLK
clk => second_counter[10].CLK
clk => second_counter[11].CLK
clk => second_counter[12].CLK
clk => second_counter[13].CLK
clk => second_counter[14].CLK
clk => second_counter[15].CLK
clk => second_counter[16].CLK
clk => second_counter[17].CLK
clk => second_counter[18].CLK
clk => second_counter[19].CLK
clk => second_counter[20].CLK
clk => second_counter[21].CLK
clk => second_counter[22].CLK
clk => second_counter[23].CLK
clk => second_counter[24].CLK
clk => second_counter[25].CLK
clk => flag~reg0.CLK
state[0] => Equal0.IN2
state[1] => Equal0.IN1
state[2] => Equal0.IN3
state[3] => Equal0.IN0
flag <= flag~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_digit[0] <= current_digit[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_digit[1] <= current_digit[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_digit[2] <= current_digit[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
current_digit[3] <= current_digit[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|LCD_module:ready_to_play
clk => clk.IN1
rst_n => rst_n.IN1
state[0] => Decoder0.IN3
state[1] => Decoder0.IN2
state[2] => Decoder0.IN1
state[3] => Decoder0.IN0
LCD_DATA[0] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[1] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[2] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[3] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[4] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[5] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[6] <= LCD_Controller:u0.LCD_DATA
LCD_DATA[7] <= LCD_Controller:u0.LCD_DATA
LCD_RW <= LCD_Controller:u0.LCD_RW
LCD_EN <= LCD_Controller:u0.LCD_EN
LCD_RS <= LCD_Controller:u0.LCD_RS


|TOP_Module|LCD_module:ready_to_play|LCD_Controller:u0
iDATA[0] => LCD_DATA[0].DATAIN
iDATA[1] => LCD_DATA[1].DATAIN
iDATA[2] => LCD_DATA[2].DATAIN
iDATA[3] => LCD_DATA[3].DATAIN
iDATA[4] => LCD_DATA[4].DATAIN
iDATA[5] => LCD_DATA[5].DATAIN
iDATA[6] => LCD_DATA[6].DATAIN
iDATA[7] => LCD_DATA[7].DATAIN
iRS => LCD_RS.DATAIN
iStart => preStart.DATAIN
iStart => Equal0.IN0
oDone <= oDone~reg0.DB_MAX_OUTPUT_PORT_TYPE
iCLK => Cont[0].CLK
iCLK => Cont[1].CLK
iCLK => Cont[2].CLK
iCLK => Cont[3].CLK
iCLK => Cont[4].CLK
iCLK => mStart.CLK
iCLK => preStart.CLK
iCLK => LCD_EN~reg0.CLK
iCLK => oDone~reg0.CLK
iCLK => ST~5.DATAIN
iRST_N => Cont[0].ACLR
iRST_N => Cont[1].ACLR
iRST_N => Cont[2].ACLR
iRST_N => Cont[3].ACLR
iRST_N => Cont[4].ACLR
iRST_N => mStart.ACLR
iRST_N => preStart.ACLR
iRST_N => LCD_EN~reg0.ACLR
iRST_N => oDone~reg0.ACLR
iRST_N => ST~7.DATAIN
LCD_DATA[0] <= iDATA[0].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[1] <= iDATA[1].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[2] <= iDATA[2].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[3] <= iDATA[3].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[4] <= iDATA[4].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[5] <= iDATA[5].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[6] <= iDATA[6].DB_MAX_OUTPUT_PORT_TYPE
LCD_DATA[7] <= iDATA[7].DB_MAX_OUTPUT_PORT_TYPE
LCD_RW <= <GND>
LCD_EN <= LCD_EN~reg0.DB_MAX_OUTPUT_PORT_TYPE
LCD_RS <= iRS.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|power_selection:select_your_power
clk => oHEX_D2[0]~reg0.CLK
clk => oHEX_D2[1]~reg0.CLK
clk => oHEX_D2[2]~reg0.CLK
clk => oHEX_D2[3]~reg0.CLK
clk => oHEX_D2[4]~reg0.CLK
clk => oHEX_D2[5]~reg0.CLK
clk => oHEX_D2[6]~reg0.CLK
clk => oHEX_D1[0]~reg0.CLK
clk => oHEX_D1[1]~reg0.CLK
clk => oHEX_D1[2]~reg0.CLK
clk => oHEX_D1[3]~reg0.CLK
clk => oHEX_D1[4]~reg0.CLK
clk => oHEX_D1[5]~reg0.CLK
clk => oHEX_D1[6]~reg0.CLK
state[0] => Mux0.IN7
state[0] => Mux1.IN7
state[0] => Mux2.IN7
state[0] => Mux3.IN7
state[0] => Mux4.IN7
state[0] => Mux5.IN7
state[0] => Mux6.IN7
state[0] => Mux7.IN7
state[0] => Mux8.IN7
state[0] => Mux9.IN7
state[0] => Mux10.IN7
state[0] => Decoder0.IN3
state[0] => Mux11.IN7
state[1] => Mux0.IN6
state[1] => Mux1.IN6
state[1] => Mux2.IN6
state[1] => Mux3.IN6
state[1] => Mux4.IN6
state[1] => Mux5.IN6
state[1] => Mux6.IN6
state[1] => Mux7.IN6
state[1] => Mux8.IN6
state[1] => Mux9.IN6
state[1] => Mux10.IN6
state[1] => Decoder0.IN2
state[1] => Mux11.IN6
state[2] => Mux0.IN5
state[2] => Mux1.IN5
state[2] => Mux2.IN5
state[2] => Mux3.IN5
state[2] => Mux4.IN5
state[2] => Mux5.IN5
state[2] => Mux6.IN5
state[2] => Mux7.IN5
state[2] => Mux8.IN5
state[2] => Mux9.IN5
state[2] => Mux10.IN5
state[2] => Decoder0.IN1
state[2] => Mux11.IN5
state[3] => Mux0.IN4
state[3] => Mux1.IN4
state[3] => Mux2.IN4
state[3] => Mux3.IN4
state[3] => Mux4.IN4
state[3] => Mux5.IN4
state[3] => Mux6.IN4
state[3] => Mux7.IN4
state[3] => Mux8.IN4
state[3] => Mux9.IN4
state[3] => Mux10.IN4
state[3] => Decoder0.IN0
state[3] => Mux11.IN4
oHEX_D2[0] <= oHEX_D2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D2[1] <= oHEX_D2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D2[2] <= oHEX_D2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D2[3] <= oHEX_D2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D2[4] <= oHEX_D2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D2[5] <= oHEX_D2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D2[6] <= oHEX_D2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[0] <= oHEX_D1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[1] <= oHEX_D1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[2] <= oHEX_D1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[3] <= oHEX_D1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[4] <= oHEX_D1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[5] <= oHEX_D1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHEX_D1[6] <= oHEX_D1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|DISPLAY_SEG:display_countdown
clk => ~NO_FANOUT~
digit[0] => Decoder0.IN3
digit[1] => Decoder0.IN2
digit[2] => Decoder0.IN1
digit[3] => Decoder0.IN0
segments[0] <= segments.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= segments.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Decoder0.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|DE2_115_Default:vga
CLOCK_50 => CLOCK_50.IN2
state[0] => state[0].IN1
state[1] => state[1].IN1
state[2] => state[2].IN1
state[3] => state[3].IN1
VGA_B[0] <= vga_controller:u4.b_data
VGA_B[1] <= vga_controller:u4.b_data
VGA_B[2] <= vga_controller:u4.b_data
VGA_B[3] <= vga_controller:u4.b_data
VGA_B[4] <= vga_controller:u4.b_data
VGA_B[5] <= vga_controller:u4.b_data
VGA_B[6] <= vga_controller:u4.b_data
VGA_B[7] <= vga_controller:u4.b_data
VGA_BLANK_N <= vga_controller:u4.oBLANK_n
VGA_CLK <= VGA_CTRL_CLK.DB_MAX_OUTPUT_PORT_TYPE
VGA_G[0] <= vga_controller:u4.g_data
VGA_G[1] <= vga_controller:u4.g_data
VGA_G[2] <= vga_controller:u4.g_data
VGA_G[3] <= vga_controller:u4.g_data
VGA_G[4] <= vga_controller:u4.g_data
VGA_G[5] <= vga_controller:u4.g_data
VGA_G[6] <= vga_controller:u4.g_data
VGA_G[7] <= vga_controller:u4.g_data
VGA_HS <= vga_controller:u4.oHS
VGA_R[0] <= vga_controller:u4.r_data
VGA_R[1] <= vga_controller:u4.r_data
VGA_R[2] <= vga_controller:u4.r_data
VGA_R[3] <= vga_controller:u4.r_data
VGA_R[4] <= vga_controller:u4.r_data
VGA_R[5] <= vga_controller:u4.r_data
VGA_R[6] <= vga_controller:u4.r_data
VGA_R[7] <= vga_controller:u4.r_data
VGA_VS <= vga_controller:u4.oVS


|TOP_Module|DE2_115_Default:vga|Reset_Delay:r0
iCLK => oRESET~reg0.CLK
iCLK => Cont[0].CLK
iCLK => Cont[1].CLK
iCLK => Cont[2].CLK
iCLK => Cont[3].CLK
iCLK => Cont[4].CLK
iCLK => Cont[5].CLK
iCLK => Cont[6].CLK
iCLK => Cont[7].CLK
iCLK => Cont[8].CLK
iCLK => Cont[9].CLK
iCLK => Cont[10].CLK
iCLK => Cont[11].CLK
iCLK => Cont[12].CLK
iCLK => Cont[13].CLK
iCLK => Cont[14].CLK
iCLK => Cont[15].CLK
iCLK => Cont[16].CLK
iCLK => Cont[17].CLK
iCLK => Cont[18].CLK
iCLK => Cont[19].CLK
oRESET <= oRESET~reg0.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|DE2_115_Default:vga|VGA_Audio_PLL:p1
areset => areset.IN1
inclk0 => sub_wire5[0].IN1
c0 <= altpll:altpll_component.clk
c1 <= altpll:altpll_component.clk
c2 <= altpll:altpll_component.clk


|TOP_Module|DE2_115_Default:vga|VGA_Audio_PLL:p1|altpll:altpll_component
inclk[0] => altpll_k3n2:auto_generated.inclk[0]
inclk[1] => altpll_k3n2:auto_generated.inclk[1]
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => altpll_k3n2:auto_generated.areset
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= clk[1].DB_MAX_OUTPUT_PORT_TYPE
clk[2] <= clk[2].DB_MAX_OUTPUT_PORT_TYPE
clk[3] <= clk[3].DB_MAX_OUTPUT_PORT_TYPE
clk[4] <= clk[4].DB_MAX_OUTPUT_PORT_TYPE
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= <GND>
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|TOP_Module|DE2_115_Default:vga|VGA_Audio_PLL:p1|altpll:altpll_component|altpll_k3n2:auto_generated
areset => pll1.ARESET
clk[0] <= pll1.CLK
clk[1] <= pll1.CLK1
clk[2] <= pll1.CLK2
clk[3] <= pll1.CLK3
clk[4] <= pll1.CLK4
inclk[0] => pll1.CLK
inclk[1] => pll1.CLK1


|TOP_Module|DE2_115_Default:vga|TRANSFORM_COLOR:u1
state[0] => Equal0.IN7
state[0] => Equal1.IN7
state[1] => Equal0.IN6
state[1] => Equal1.IN6
state[2] => Equal0.IN5
state[2] => Equal1.IN5
state[3] => Equal0.IN4
state[3] => Equal1.IN4
r[0] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
r[1] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
r[2] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
r[3] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
r[4] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
r[5] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
r[6] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
r[7] <= Equal0.DB_MAX_OUTPUT_PORT_TYPE
g[0] <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
g[1] <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
g[2] <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
g[3] <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
g[4] <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
g[5] <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
g[6] <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
g[7] <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
b[0] <= <GND>
b[1] <= <GND>
b[2] <= <GND>
b[3] <= <GND>
b[4] <= <GND>
b[5] <= <GND>
b[6] <= <GND>
b[7] <= <GND>


|TOP_Module|DE2_115_Default:vga|vga_controller:u4
iRST_n => rst.IN1
iRST_n => ADDR[0].ACLR
iRST_n => ADDR[1].ACLR
iRST_n => ADDR[2].ACLR
iRST_n => ADDR[3].ACLR
iRST_n => ADDR[4].ACLR
iRST_n => ADDR[5].ACLR
iRST_n => ADDR[6].ACLR
iRST_n => ADDR[7].ACLR
iRST_n => ADDR[8].ACLR
iRST_n => ADDR[9].ACLR
iRST_n => ADDR[10].ACLR
iRST_n => ADDR[11].ACLR
iRST_n => ADDR[12].ACLR
iRST_n => ADDR[13].ACLR
iRST_n => ADDR[14].ACLR
iRST_n => ADDR[15].ACLR
iRST_n => ADDR[16].ACLR
iRST_n => ADDR[17].ACLR
iRST_n => ADDR[18].ACLR
iVGA_CLK => iVGA_CLK.IN1
color_r1[0] => r_data.DATAB
color_r1[0] => r_data.DATAB
color_r1[0] => r_data.DATAB
color_r1[1] => r_data.DATAB
color_r1[1] => r_data.DATAB
color_r1[1] => r_data.DATAB
color_r1[2] => r_data.DATAB
color_r1[2] => r_data.DATAB
color_r1[2] => r_data.DATAB
color_r1[3] => r_data.DATAB
color_r1[3] => r_data.DATAB
color_r1[3] => r_data.DATAB
color_r1[4] => r_data.DATAB
color_r1[4] => r_data.DATAB
color_r1[4] => r_data.DATAB
color_r1[5] => r_data.DATAB
color_r1[5] => r_data.DATAB
color_r1[5] => r_data.DATAB
color_r1[6] => r_data.DATAB
color_r1[6] => r_data.DATAB
color_r1[6] => r_data.DATAB
color_r1[7] => r_data.DATAB
color_r1[7] => r_data.DATAB
color_r1[7] => r_data.DATAB
color_g1[0] => g_data.DATAB
color_g1[0] => g_data.DATAB
color_g1[0] => g_data.DATAB
color_g1[1] => g_data.DATAB
color_g1[1] => g_data.DATAB
color_g1[1] => g_data.DATAB
color_g1[2] => g_data.DATAB
color_g1[2] => g_data.DATAB
color_g1[2] => g_data.DATAB
color_g1[3] => g_data.DATAB
color_g1[3] => g_data.DATAB
color_g1[3] => g_data.DATAB
color_g1[4] => g_data.DATAB
color_g1[4] => g_data.DATAB
color_g1[4] => g_data.DATAB
color_g1[5] => g_data.DATAB
color_g1[5] => g_data.DATAB
color_g1[5] => g_data.DATAB
color_g1[6] => g_data.DATAB
color_g1[6] => g_data.DATAB
color_g1[6] => g_data.DATAB
color_g1[7] => g_data.DATAB
color_g1[7] => g_data.DATAB
color_g1[7] => g_data.DATAB
color_b1[0] => b_data.DATAB
color_b1[0] => b_data.DATAB
color_b1[0] => b_data.DATAB
color_b1[1] => b_data.DATAB
color_b1[1] => b_data.DATAB
color_b1[1] => b_data.DATAB
color_b1[2] => b_data.DATAB
color_b1[2] => b_data.DATAB
color_b1[2] => b_data.DATAB
color_b1[3] => b_data.DATAB
color_b1[3] => b_data.DATAB
color_b1[3] => b_data.DATAB
color_b1[4] => b_data.DATAB
color_b1[4] => b_data.DATAB
color_b1[4] => b_data.DATAB
color_b1[5] => b_data.DATAB
color_b1[5] => b_data.DATAB
color_b1[5] => b_data.DATAB
color_b1[6] => b_data.DATAB
color_b1[6] => b_data.DATAB
color_b1[6] => b_data.DATAB
color_b1[7] => b_data.DATAB
color_b1[7] => b_data.DATAB
color_b1[7] => b_data.DATAB
oBLANK_n <= oBLANK_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
oHS <= oHS~reg0.DB_MAX_OUTPUT_PORT_TYPE
oVS <= oVS~reg0.DB_MAX_OUTPUT_PORT_TYPE
b_data[0] <= b_data.DB_MAX_OUTPUT_PORT_TYPE
b_data[1] <= b_data.DB_MAX_OUTPUT_PORT_TYPE
b_data[2] <= b_data.DB_MAX_OUTPUT_PORT_TYPE
b_data[3] <= b_data.DB_MAX_OUTPUT_PORT_TYPE
b_data[4] <= b_data.DB_MAX_OUTPUT_PORT_TYPE
b_data[5] <= b_data.DB_MAX_OUTPUT_PORT_TYPE
b_data[6] <= b_data.DB_MAX_OUTPUT_PORT_TYPE
b_data[7] <= b_data.DB_MAX_OUTPUT_PORT_TYPE
g_data[0] <= g_data.DB_MAX_OUTPUT_PORT_TYPE
g_data[1] <= g_data.DB_MAX_OUTPUT_PORT_TYPE
g_data[2] <= g_data.DB_MAX_OUTPUT_PORT_TYPE
g_data[3] <= g_data.DB_MAX_OUTPUT_PORT_TYPE
g_data[4] <= g_data.DB_MAX_OUTPUT_PORT_TYPE
g_data[5] <= g_data.DB_MAX_OUTPUT_PORT_TYPE
g_data[6] <= g_data.DB_MAX_OUTPUT_PORT_TYPE
g_data[7] <= g_data.DB_MAX_OUTPUT_PORT_TYPE
r_data[0] <= r_data.DB_MAX_OUTPUT_PORT_TYPE
r_data[1] <= r_data.DB_MAX_OUTPUT_PORT_TYPE
r_data[2] <= r_data.DB_MAX_OUTPUT_PORT_TYPE
r_data[3] <= r_data.DB_MAX_OUTPUT_PORT_TYPE
r_data[4] <= r_data.DB_MAX_OUTPUT_PORT_TYPE
r_data[5] <= r_data.DB_MAX_OUTPUT_PORT_TYPE
r_data[6] <= r_data.DB_MAX_OUTPUT_PORT_TYPE
r_data[7] <= r_data.DB_MAX_OUTPUT_PORT_TYPE


|TOP_Module|DE2_115_Default:vga|vga_controller:u4|video_sync_generator:LTM_ins
reset => v_cnt[0].ACLR
reset => v_cnt[1].ACLR
reset => v_cnt[2].ACLR
reset => v_cnt[3].ACLR
reset => v_cnt[4].ACLR
reset => v_cnt[5].ACLR
reset => v_cnt[6].ACLR
reset => v_cnt[7].ACLR
reset => v_cnt[8].ACLR
reset => v_cnt[9].ACLR
reset => h_cnt[0].ACLR
reset => h_cnt[1].ACLR
reset => h_cnt[2].ACLR
reset => h_cnt[3].ACLR
reset => h_cnt[4].ACLR
reset => h_cnt[5].ACLR
reset => h_cnt[6].ACLR
reset => h_cnt[7].ACLR
reset => h_cnt[8].ACLR
reset => h_cnt[9].ACLR
reset => h_cnt[10].ACLR
vga_clk => v_cnt[0].CLK
vga_clk => v_cnt[1].CLK
vga_clk => v_cnt[2].CLK
vga_clk => v_cnt[3].CLK
vga_clk => v_cnt[4].CLK
vga_clk => v_cnt[5].CLK
vga_clk => v_cnt[6].CLK
vga_clk => v_cnt[7].CLK
vga_clk => v_cnt[8].CLK
vga_clk => v_cnt[9].CLK
vga_clk => h_cnt[0].CLK
vga_clk => h_cnt[1].CLK
vga_clk => h_cnt[2].CLK
vga_clk => h_cnt[3].CLK
vga_clk => h_cnt[4].CLK
vga_clk => h_cnt[5].CLK
vga_clk => h_cnt[6].CLK
vga_clk => h_cnt[7].CLK
vga_clk => h_cnt[8].CLK
vga_clk => h_cnt[9].CLK
vga_clk => h_cnt[10].CLK
vga_clk => blank_n~reg0.CLK
vga_clk => VS~reg0.CLK
vga_clk => HS~reg0.CLK
blank_n <= blank_n~reg0.DB_MAX_OUTPUT_PORT_TYPE
HS <= HS~reg0.DB_MAX_OUTPUT_PORT_TYPE
VS <= VS~reg0.DB_MAX_OUTPUT_PORT_TYPE


